{"version":3,"sources":["components/API Search/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","margin","padding","spacing","button","unit","closeButton","position","right","top","color","palette","grey","DialogTitle","withStyles","props","children","classes","onClose","react_default","a","createElement","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","Close_default","DialogContent","MuiDialogContent","OutlinedTextFields","state","open","value","handleChange","event","_this","setState","parameter","target","handleTabs","new_temp","temp","new_temp_min","temp_min","new_temp_max","temp_max","degree","parseFloat","toFixed","handleClose","removeSubmit","e","preventDefault","handleKeyDown","key","handleApiRequest","userQuery","axios","get","then","res","weather","data","main","console","log","catch","error","Swal","fire","title","text","type","this","Fragment","onSubmit","onKeyDown","noValidate","autoComplete","TextField","id","label","onChange","helperText","Dialog","aria-labelledby","alt","src","icon","Search_DialogTitle","name","coord","lat","lon","Search_DialogContent","dividers","Grid","container","item","xs","class","Paper","square","Tabs","indicatorColor","textColor","centered","Tab","active","Component","flexGrow","paper","textAlign","secondary","Search_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.615fc2d5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Grid from \"@material-ui/core/Grid\";\nimport \"./Search.css\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500]\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"Close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\n\nclass OutlinedTextFields extends Component {\n  state = {\n    open: false,\n    value: 0\n  };\n\n  handleChange = event => {\n    this.setState({ parameter: event.target.value });\n    // console.log(this.state.parameter);\n  };\n\n  handleTabs = (event, value) => {\n    this.setState({ value }, () => {\n      switch (this.state.value) {\n        case 0:\n          this.setState({\n            new_temp: this.state.temp,\n            new_temp_min: this.state.temp_min,\n            new_temp_max: this.state.temp_max,\n            degree: \" K\"\n          });\n          break;\n        case 1:\n          this.setState({\n            new_temp: parseFloat(this.state.temp - 273.15).toFixed(2),\n            new_temp_min: parseFloat(this.state.temp_min - 273.15).toFixed(2),\n            new_temp_max: parseFloat(this.state.temp_max - 273.15).toFixed(2),\n            degree: \" °C\"\n          });\n          break;\n        case 2:\n          this.setState({\n            new_temp: parseFloat(\n              ((this.state.temp - 273.15) * 9) / 5 + 32\n            ).toFixed(2),\n            new_temp_min: parseFloat(\n              ((this.state.temp_min - 273.15) * 9) / 5 + 32\n            ).toFixed(2),\n            new_temp_max: parseFloat(\n              ((this.state.temp_max - 273.15) * 9) / 5 + 32\n            ).toFixed(2),\n            degree: \" °F\"\n          });\n          break;\n      }\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  removeSubmit = e => {\n    e.preventDefault();\n  };\n\n  handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      this.setState({ open: true });\n      this.handleApiRequest(this.state.parameter);\n    } else {\n      this.setState({ open: false });\n    }\n  };\n\n  handleApiRequest = userQuery => {\n    axios\n      .get(\n        `http://api.openweathermap.org/data/2.5/weather?apikey=355e806e0c6b3aa9c5c24c36144d073b&q=` +\n          userQuery\n      )\n      .then(res => {\n        this.setState({\n          weather: res.data,\n          temp: res.data.main.temp,\n          temp_min: res.data.main.temp_min,\n          temp_max: res.data.main.temp_max,\n          new_temp: res.data.main.temp,\n          new_temp_min: res.data.main.temp_min,\n          new_temp_max: res.data.main.temp_max,\n          degree: \" K\"\n        });\n        console.log(this.state.weather);\n      })\n      .catch(error => {\n        this.setState({\n          open: false\n        });\n\n        Swal.fire({\n          title: \"Error!\",\n          text:\n            'Invalid entry. No results were found for \"' +\n            this.state.parameter +\n            '\".',\n          type: \"error\"\n        });\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <>\n        <form\n          className=\"search-container\"\n          onSubmit={this.removeSubmit}\n          onKeyDown={this.handleKeyDown}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <TextField\n            id=\"outlined-name\"\n            label=\"Sky Tidings&nbsp;&nbsp;\"\n            onChange={this.handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            helperText={\n              <sm className=\"helper-text\">Enter a City or ZIP Code</sm>\n            }\n          />\n        </form>\n\n        {this.state.weather ? (\n          <Dialog\n            onClose={this.handleClose}\n            aria-labelledby=\"customized-dialog-title\"\n            open={this.state.open}\n            className=\"dialog-box\"\n          >\n            <div className=\"title-format\">\n              <img\n                className=\"weather-icon\"\n                alt=\"Weather Icon\"\n                src={\n                  \"http://openweathermap.org/img/w/\" +\n                  this.state.weather.weather[0].icon +\n                  \".png\"\n                }\n              />\n              <DialogTitle\n                id=\"customized-dialog-title\"\n                onClose={this.handleClose}\n              >\n                {this.state.weather.name} ({this.state.weather.weather[0].main})\n                <br /> Lat: {this.state.weather.coord.lat.toFixed(2)} Lon:{\" \"}\n                {this.state.weather.coord.lon.toFixed(2)}\n              </DialogTitle>\n            </div>\n            <DialogContent className=\"dialog-content\" dividers>\n              <Grid container spacing={24} className=\"icon-group\">\n                <Grid item xs={4} className=\"centering-icons\">\n                  <i class=\"fas fa-temperature-low\" />\n                </Grid>\n                <Grid item xs={4} className=\"centering-icons\">\n                  <i class=\"fas fa-cloud-sun\" />\n                </Grid>\n                <Grid item xs={4} className=\"centering-icons\">\n                  <i class=\"fas fa-temperature-high\" />\n                </Grid>\n                <Grid item xs={4}>\n                  <p>{this.state.new_temp_min + this.state.degree}</p>\n                </Grid>\n                <Grid item xs={4}>\n                  <p>{this.state.new_temp + this.state.degree}</p>\n                </Grid>\n                <Grid item xs={4}>\n                  <p>{this.state.new_temp_max + this.state.degree}</p>\n                </Grid>\n                <Grid item xs={4}>\n                  <p className=\"format-paragraph\">Low</p>\n                </Grid>\n                <Grid item xs={4}>\n                  <p className=\"format-paragraph\">Current</p>\n                </Grid>\n                <Grid item xs={4}>\n                  <p className=\"format-paragraph\">High</p>\n                </Grid>\n              </Grid>\n              <Paper square className=\"format-temps\">\n                <Tabs\n                  value={this.state.value}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  onChange={this.handleTabs}\n                  centered\n                >\n                  <Tab label=\"Kelvin\" active />\n                  <Tab label=\"Celsius\" />\n                  <Tab label=\"Fahrenheit\" />\n                </Tabs>\n              </Paper>\n            </DialogContent>\n          </Dialog>\n        ) : (\n          false\n        )}\n      </>\n    );\n  }\n}\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(OutlinedTextFields);\n","import React from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Search from \"./components/API Search/Search/Search\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n});\n\nfunction FullWidthGrid(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} className=\"align-input\">\n          <Search />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nFullWidthGrid.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(FullWidthGrid);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}